snippet <- "Assign" iA
←
endsnippet

snippet xx "direction/times" iA
×
endsnippet

snippet :- "divide" iA
÷
endsnippet

snippet -: "divide" iA
÷
endsnippet

snippet *o "logarithm" iA
⍟
endsnippet

snippet o* "logarithm" iA
⍟
endsnippet

snippet ]: "matrix divide" iA
⌹
endsnippet

snippet :] "matrix divide" iA
⌹
endsnippet

snippet OO "pi times/circula" iA
○
endsnippet

snippet FF "celling/maximum" iA
⌈
endsnippet

snippet LL "floor/minimum" iA
⌊
endsnippet

snippet |_ "decode" iA
⊥
endsnippet

snippet _| "decode" iA
⊥
endsnippet

snippet TT "encode" iA
⊤
endsnippet

snippet -| "same left" i
⊣
endsnippet

snippet |- "same right" i
⊢
endsnippet

snippet =/ "unique mask/not equal" i
≠
endsnippet

snippet /= "unique mask/not equal" i
≠
endsnippet

snippet <= "less than or equal" iA
≤
endsnippet

snippet =< "less than or equal" iA
≤
endsnippet

snippet >= "more than or equal" iA
≥
endsnippet

snippet => "more than or equal" iA
≥
endsnippet

snippet == "depth/match" i
≡
endsnippet

snippet =7 "tally/not match" i
≢
endsnippet

snippet 7= "tally/not match" i
≢
endsnippet

snippet vv "greatest common divisor/or" iA
∨
endsnippet

snippet ^^ "lowest common multiple/and" iA
∧
endsnippet

snippet ^~ "nand" i
⍲
endsnippet

snippet ~^ "nand" i
⍲
endsnippet

snippet v~ "nor" i
⍱
endsnippet

snippet ~v "nor" i
⍱
endsnippet

snippet ^| "mix/take" i
↑
endsnippet

snippet |^ "mix/take" i
↑
endsnippet

snippet |v "split/drop" i
↓
endsnippet

snippet v| "split/drop" i
↓
endsnippet

snippet c "enclose/partitioned enclose" i
⊂
endsnippet

snippet C "firs/pick" i
⊃
endsnippet

snippet c_ "nest/partition" iA
⊆
endsnippet

snippet |] "nest/partition" i
⌷
endsnippet

snippet ]| "nest/partition" i
⌷
endsnippet

snippet A| "grade up" i
⍋
endsnippet

snippet |A "grade up" i
⍋
endsnippet

snippet |V "grade down" i
⍒
endsnippet

snippet V| "grade down" i
⍒
endsnippet

snippet ii "indices/indices of" iA
⍳
endsnippet

snippet i_ "where/individual items" iA
⍸
endsnippet

snippet e "inlist/member of" i
∊
endsnippet

snippet e_ "find" iA
⍷
endsnippet

snippet uu "unique/union items" iA
∪
endsnippet

snippet nn "intersection" i
∩
endsnippet

snippet , "table/catenate first" i
⍪
endsnippet

snippet pp "shape/reshape" iA
⍴
endsnippet

snippet o| "reverse/rotate" i
⌽
endsnippet

snippet |o "reverse/rotate" i
⌽
endsnippet

snippet o\ "transpose/reorder axes" i
⍉
endsnippet

snippet \o "transpose/reorder axes" i
⍉
endsnippet

snippet -o "reverse first/rotate first" i
⊖
endsnippet

snippet o- "reverse first/rotate first" i
⊖
endsnippet

snippet /- "replicate first/reduce first" i
⌿
endsnippet

snippet -/ "replicate first/reduce first" i
⌿
endsnippet

snippet -\ "expand first/scan first" i
⍀
endsnippet

snippet \- "expand first/scan first" i
⍀
endsnippet

snippet :: "each" iA
¨
endsnippet

snippet *: "expand first/scan first" iA
⍣
endsnippet

snippet :* "expand first/scan first" iA
⍣
endsnippet

snippet ~: "constant/self/swap" iA
⍨
endsnippet

snippet :~ "constant/self/swap" iA
⍨
endsnippet

snippet o "curry/compose" i
∘
endsnippet

snippet o: "rank/atop" iA
⍤
endsnippet

snippet :o "rank/atop" iA
⍤
endsnippet

snippet :O "Over" iA
⍥
endsnippet

snippet O: "Over" iA
⍥
endsnippet

snippet [] "system name" i
⎕
endsnippet

snippet <> "statement separator" iA
⋄
endsnippet

snippet ww "right argument" iA
⍵
endsnippet

snippet a "left argument" i
⍺
endsnippet

snippet -- "negative" iA
¯
endsnippet

snippet oT "format" i
⍕
endsnippet

snippet oL "format" i
⍎
endsnippet

snippet VV "recursion" iA
∇
endsnippet

snippet o~ "empty numeric vector" iA
⍬
endsnippet

snippet 0~ "empty numeric vector" iA
⍬
endsnippet

snippet AA "comment" iA
⍝
endsnippet
