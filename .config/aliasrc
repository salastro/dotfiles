    # _    _ _           ____   ____ 
   # / \  | (_) __ _ ___|  _ \ / ___|
  # / _ \ | | |/ _` / __| |_) | |    
 # / ___ \| | | (_| \__ \  _ <| |___ 
# /_/   \_\_|_|\__,_|___/_| \_\\____|

# xbps pkg manager
xi(){
	doas xbps-install $@
	pkill -rtmin+2 dwmblocks
}
xr(){
	doas xbps-remove $@
	pkill -rtmin+2 dwmblocks
}
alias xq='xbps-query'
alias xqs='xq -Rs'
alias xqsf="xqs \* | fzf | awk  '{print $2}' | xclip -selection clipboard"
xqsfi(){
	xi "$(xqs \* | fzf | awk  '{print $2}')"
}
alias xrr='xr -R'
xu(){
	xi -Su $@
	pkill -rtmin+2 dwmblocks
}
alias xuy='xu -y'
alias xre='doas xbps-reconfigure'
alias xal='doas xbps-alternatives'
alias xpkgdb='doas xbps-pkgdb'
alias xri='doas xbps-rindex'
alias fp='fuzzypkg'

# pmm
alias pmmuy="sudo pmm-install -Suy"

# Shortcuts
alias e='$EDITOR -p'
alias s='sc-im'

# trash
alias rm='trash'

# ls
alias ls='ls --color=auto -F'
alias ll='ls -l'
alias llh='ll -h'
alias la='ls -A'
alias cl="c;ls"
alias cla="c;la"

# man pages
export LESS_TERMCAP_mb=$'\e[1;32m'
export LESS_TERMCAP_md=$'\e[1;32m'
export LESS_TERMCAP_me=$'\e[0m'
export LESS_TERMCAP_se=$'\e[0m'
export LESS_TERMCAP_so=$'\e[01;33m'
export LESS_TERMCAP_ue=$'\e[0m'
export LESS_TERMCAP_us=$'\e[1;4;31m'
random() {
    if [[ $1 == "man" ]]; then
        man -k . 2>/dev/null | shuf | head -1 | awk '{print $1}' | sed 's/(.)//g' | sed 's/,//g' | xargs man -a
    else
        command random "$@"
    fi
}

# nnn
alias nnn='bicon.bin nnn -r -C -d -e'
export NNN_COLORS="263"
export NNN_PLUG='f:simple-fzf-open;w:setpywal;W:setpywalvid;d:dragdrop;i:-sxiv;I:d-sxiv;m:mpv-all;M:mpv-music'
export NNN_BMS='D:~/Documents;d:~/Downloads;p:~/Pictures;v:~/Videos;m:~/Music;P:~/.srcpkgs;S:~/.scripts;a:~/.local/bin;s:/mnt/DiskE/Important/STEM;c:~/.config/;M:/media/;w:~/Documents/VimWiki/'
export NNN_FIFO="/tmp/nnn.fifo"
export NNN_TRASH=1
n ()
{
    # Block nesting of nnn in subshells
    if [ -n $NNNLVL ] && [ "${NNNLVL:-0}" -ge 1 ]; then
        echo "nnn is already running"
        return
    fi

    # The default behaviour is to cd on quit (nnn checks if NNN_TMPFILE is set)
    # To cd on quit only on ^G, remove the "export" as in:
    #     NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
    # NOTE: NNN_TMPFILE is fixed, should not be modified
    NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

    # Unmask ^Q (, ^V etc.) (if required, see `stty -a`) to Quit nnn
    # stty start undef
    # stty stop undef
    # stty lwrap undef
    # stty lnext undef

    # tmux split-window -e "NNN_FIFO=$NNN_FIFO" -dh "~/.config/nnn/plugins/mpv-music"
    nnn "$@"

    if [ -f "$NNN_TMPFILE" ]; then
            . "$NNN_TMPFILE"
            rm -f "$NNN_TMPFILE" > /dev/null
    fi
}

# devour
alias dmpv='devour mpv'
alias dzathura='devour zathura'
alias dzathurat='devour zathurat'
alias dsxiv='devour sxiv'

# scrcpy
alias adb-restart='adb kill-server;adb start-server'

# fzf
alias fzfo='xdg-open "$(fzf)"'

# task
export TASKRC=$HOME/.config/taskrc
alias t='task'
alias tdo='task done'
alias tde='task delete'
alias ta='task add'
alias tm='task modify'
alias te='task edit'
## vit
export VIT_DIR="$HOME/.config/vit/"

# git
alias g='git'
alias gb="git branch"
alias gbd='gb -D'
alias gc="git checkout"
alias gcb="gc -b"
alias clg="cl;gb"
alias clag="cla;gb"
alias gap="git apply"
alias gad='git add'
alias gco='git commit'
alias gm='git merge'
alias gcl='git clone'
alias gp='git push'
alias gpf='gp -f'
alias gs='git status'
alias gd='git diff'
alias dotfiles='git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'
src() {
	cd ~/.srcpkgs && 
	echo "\e[1;31mcd $(pwd)" &&
	echo "\e[1;31mgit clone $(xclip -o -selection clipboard)\e[0m" &&
	git clone $(xclip -o -selection clipboard) && 
	cd "$(basename $(xclip -o -selection clipboard) .git)" &&
	echo "\e[1;31mcd $(pwd)"
}

# Clear
alias c="clear"

# system
## cpg/mvg
alias cp='cpg -givr'
alias mv='mvg -giv'
alias grep='grep --color=auto'
alias mkdir='mkdir -vp'

alias tt='tt -showwpm -t 15 -notheme'

alias sudo='doas'

# fetch scripts
alias nf='neofetch'
alias of='onefetch'
alias pf='PF_INFO="ascii title os wm uptime palette" pfetch'
